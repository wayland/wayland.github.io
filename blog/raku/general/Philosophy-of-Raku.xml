<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../all-sites/layout.xsl"?>
<page hidden="1">
<title>The Philosophy of Raku</title>
<description>An explanation of the philosophy of Raku</description>
<category>Raku, General</category>
<author name="Tim Nelson"/>
<pubDate>TODO pubDate</pubDate>

<sitedir>blog</sitedir>
<filename>raku/general/Philosophy-of-Raku.xml</filename>
<content>

<p>Python has their philosophical statement, <a href="https://en.wikipedia.org/wiki/Zen_of_Python">Zen of Python</a>.  Someone from our sister language, Perl, produced a response to this called <a href="https://www.perlmonks.org/?node_id=752029">Zen of Perl</a>.  While these are well and good, the Raku philosophy differs enough from the Python one that a response like that doesn't really express the Raku philosophy, just refute the Python one.  </p>

<p>Raku is full of meta-objects.  So I took a step in the meta-direction, and asked "Is there a Zen of Raku?"  Since Zen is well-known for its koans, and "Zen of Python" seems to be a collection of these, I investigated them.  In the popular sense, a koan is a confusing statement that isn't explained, but nevertheless has only one right explanation.  </p>

<p>Since one of the core tenets of Raku is "There's more than one way to do it", and this seemed antithetical to choosing a particular philosophy (ie. Zen, which is one way to do it), I titled this "The Philosophy of Raku", not "Zen of Raku".  </p>

<p>So let us examine some of the basic principles of Raku.</p>

<h1>The Core Tenet</h1>

<p>Since Raku was originally to be the next version of Perl, there will obviously be some similarities, so some of the material below will quote both the Perl philosophy and the Raku Philosophy.  </p>

<style>
.core-quote-box {
  display: grid;
  grid-template-columns: auto auto auto;
  column-gap: 4pt;
 
  max-width: fit-content;
  margin: 4pt auto;
}
.bigfont {
  font-size: 200%;
  font-weight: 900;
}
.cqe { // Core Quote Element
  max-width: fit-content;
}
.things {
  text-align: right;
}
.value {
  text-align: left;
}
.parallel-quote {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 1em;
}
.quote-header {
  text-align: center;
  font-weight: 900;
  padding: 4pt;
}
</style>


<div class="parallel-quote">
<div class="blockquote">
<div class="quote-header">Perl</div>
Make the Easy Things Easy, and the Hard Things Possible<footnote>This is likely a paraphrase of Alan Kay's quote <a href="https://www.quora.com/What-is-the-story-behind-Alan-Kay-s-adage-Simple-things-should-be-simple-complex-things-should-be-possible/answer/Alan-Kay-11?ch=10&amp;share=7a78ffce&amp;srid=88EK">Simple things should be simple, complex things should be possible</a>.  </footnote>
<div class="reference">Larry Wall, designer of Perl and Raku, about Perl</div>
</div>
<div class="blockquote">
<div class="quote-header">Raku</div>
For Raku, ... we aimed a little higher:<br/>
  <div class="core-quote-box">
    <span class="cqe easy things">Easy things</span> <span class="cqe">should be</span> <span class="cqe">trivial</span>
    <span class="cqe hard things">Hard things</span> <span class="cqe">should be</span> <span class="cqe">easy;</span>
    <span class="cqe impossible things">Impossible things</span> <span class="cqe">should be</span> <span class="cqe">(merely) hard.</span>
  </div>
<div class="reference">Damian Conway<ref 
  href="https://github.com/Raku-Steering-Council/Papers/issues/3#issuecomment-659767990"
  title="Comment 659767990"
  largerwork="What is the philosophy of the Raku project?"
  publishingdate="17th July 2020"
><authors>Damian Conway</authors></ref></div>
</div>
</div>

<p>Larry Wall was the designer of both languages.  Damian Conway worked closely with him during the design of Raku.  Damian's most prominent role was to interpret and explain what Larry had said.  If Larry was J. R. R. Tolkien, Damian was Christopher Tolkien, toiling away so that the rest of us could understand the mentor.  </p>

<callout min-width="fit-content">
  <div class="core-quote-box">
    <span class="cqe easy things">Easy things</span> <span class="cqe">should be</span> <span class="cqe value">trivial</span>
    <span class="cqe hard things">Hard things</span> <span class="cqe">should be</span> <span class="cqe value">easy;</span>
    <span class="cqe impossible things">Impossible things</span> <span class="cqe">should be</span> <span class="cqe value">(merely) hard.</span>
  </div>
</callout>

<p>This is a three-part statement that explains a lot about Raku.  </p>

<h2>Easy things should be trivial</h2>

<p>There are many contributors to this, but there are two philosophical points worth highlighting here:</p>

<ul>
  <li>Language should stay out of the way</li>
  <li>Freedom (There's More Than One Way To Do It)</li>
</ul>

<h3>Language Should Stay Out Of The Way</h3>

<p>For common tasks, the language should stay out of the programmer’s way.</p>

<p>In keeping with the "Do what I mean" tenet, the language should accomodate the programmer, not <i>vice versa</i>.  </p>

<div class="blockquote">
Complexity is intrinsically irreducible…but extrinsically redistributable. [Raku] tries to put the complexity where it will do the least harm, and where its victims may have the best chance of surviving it.
<div class="reference">Damian Conway</div>
</div>

<h3>Freedom (There's More Than One Way To Do It)</h3>

<div class="parallel-quote">
<div class="blockquote">
<div class="quote-header">Perl</div>
There's More Than One Way To Do It
<div class="reference">Larry Wall</div>
</div>
<div class="blockquote">
<div class="quote-header">Raku</div>
There's Always More Than One Way To Do It<br/>
But Some Ways Are More Equal Than Others.
<div class="reference">Damian Conway<ref 
  href="https://github.com/Raku-Steering-Council/Papers/issues/3#issuecomment-659767990"
  title="Comment 659767990"
  largerwork="What is the philosophy of the Raku project?"
  publishingdate="17th July 2020"
><authors>Damian Conway</authors></ref></div>
</div>
</div>
<p>The Perl saying is so widely used in the community that it has its own acronym: TMTOWTDI (pronounced "tim-toady").  This is one of the things that contributes to making the easy things easy -- if you can think of a way to do it, then something like that is probably possible.</p>

<p>Some languages don't subscribe to this philosophy.  Python, for example, has the principles "There should be one -- and preferably only one -- obvious way to do it", followed by "Although that way may not be obvious at first unless you're Dutch".  So for anyone who isn't Dutch, Raku aligns better with your thinking.  And if you <i>are</i> Dutch, then all I'll say is that a number of the most prominent people in the Raku community are also Dutch, so Python's thinking doesn't even suit all Dutch people.  </p>

<p>Many languages that don't intentionally subscribe to the "One True Path" philosphy often subscribe to it in practice -- once something can be done, then there's no need to add another way to do it.  </p>

<p>Even if you agree with the statement "There should be one -- and preferably only one -- obvious way to do it", if the way that you think it should be done isn't the way chosen by the designers of Python (or various other languages), then you're out of luck.  If you want to do it your way, you'll need to use a more flexible language like Raku.  </p>

<div class="blockquote">
True greatness is measured by how much freedom you give to others, not by how much you can coerce others to do what you want.  
<div class="reference">Larry Wall</div>
</div>

<h2>Hard things should be easy</h2>
<div class="parallel-quote">
<div class="blockquote">
<div class="quote-header">Perl</div>
Perl is the Swiss Army Chainsaw of Unix.  
<div class="reference">Henry Spencer<footnote>Henry Spencer, the creator of the original regex library, was paraphrasing the saying that <code>lex</code> was "the Swiss-army knife of Unix programming"</footnote></div>
</div>

<div class="blockquote">
<div class="quote-header">Raku</div>
[Raku is] more like a Swiss army machine shop. It really gives you a lot of tools, some of which are dangerous, but it lets you get your job done very quickly.
<div class="reference">Larry Wall<ref
  href="https://bigthink.com/videos/big-think-interview-with-larry-wall/"
  title="Big Think Interview With Larry Wall"
  publishingdate="(Between 2007 and 2025 -- If you can narrow it down, let me know)"
>Larry Wall</ref></div>
</div>
</div>
<p>This is where the fact that Raku is a Swiss Army Chainsaw comes to the fore.  Because the language has so many capabilities, the hard things become easy.  </p>

<p>For example, parsing tasks that would normally be avoided due to complexity become straightforward, because grammars are built in to the language, rather than bolted on with libraries.  Likewise with concurrency.  And multiple dispatch (also built in) reduces the number of if/switch/case statements, because different types of arguments can be handled by functions that have the same name, but different parameters.  </p>

<h2>Impossible things should be merely hard</h2>

<div class="blockquote">
The problem with being consistent is that there are lots of ways to be consistent, and they’re all inconsistent with each other
<div class="reference">Larry Wall</div>
</div>

<div class="blockquote">
We all agree on the necessity of compromise. We just can't agree on when it's necessary to compromise.
<div class="reference">Larry Wall</div>
</div>

<h1>Virtue</h1>

<p>The study of Virtue is a matter of significance in Philosophy; what does the virtuous life look like?</p>

<div class="blockquote">
The three chief virtues of a programmer are: Laziness, Impatience, and Hubris
<div class="reference">Larry Wall</div>
</div>

<p>Since There's More Than One Way To Do It, we <i>did</i> include one koan-like statement, and this is it.  </p>

<h1>Optimised for Fun</h1>

<div class="blockquote">
Raku is optimised for Fun
<div class="reference">Audrey Tang</div>
</div>



</content>
</page>
