#!/usr/bin/env raku

use	DateTime::Format::RFC2822;

sub	MAIN(:$verbose) {
	my @paths = <blog>;

	for @paths -> $path {
		##### Create files.xml
		my @xml-files = xml-find($path);
		my $filelist-filename = "$path/this-site/generated/files.xml";
		my $contents = qq:to /EOT/;
		<?xml version="1.0" encoding="UTF-8"?>
		<filesystem-info xml:base="../..">
			<lastBuildDate>{DateTime::Format::RFC2822.to-string(DateTime.now)}</lastBuildDate>
			<file-list>
		EOT

		for @xml-files -> $file {
			my $is-index = $file ~~ /index.xml$/ ?? 'is-index="1"' !! '';
			$contents ~= qq:c:to /EOT/;
				<file src=\"{$file}\" created="{$file.IO.created.Date}" modified="{$file.IO.modified.Date}" {$is-index}/>
		EOT
		}

		$contents ~= q:to /EOT/;
			</file-list>
		</filesystem-info>
		EOT

		$filelist-filename.IO.spurt: $contents;

		if $verbose {
			shell("xml_pp $filelist-filename");
		}

		##### Create site-contents.xml
		shell("xsltproc autogenerated/xsl/site-contents.xsl $filelist-filename > $path/this-site/generated/site-contents.xml");
		if $verbose {
			shell("xml_pp $path/this-site/generated/site-contents.xml");
		}

		##### Create RSS feed
		shell("xsltproc autogenerated/xsl/rss.xsl $filelist-filename > $path/this-site/generated/rss.xml");
		if $verbose {
			shell("xml_pp $path/this-site/generated/rss.xml");
		}
	}
}

sub	xml-find(*@paths) {
	my $find-command = "find {@paths.join(' ')} -name '*.xml'";
	my @xml-files = qqx{$find-command}.lines.grep({ !/this\-site/ });

	return @xml-files
}
